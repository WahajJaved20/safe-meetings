{
  "address": "0x03B3727CB7Eff7A9f158B7CD49e170Fb5E82a3ab",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        }
      ],
      "name": "SafeMeeting__AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        }
      ],
      "name": "SafeMeeting__DoesNotHaveAccess",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "meetingID",
          "type": "uint256"
        }
      ],
      "name": "SafeMeeting__MeetingNotListed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        }
      ],
      "name": "WalletListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        }
      ],
      "name": "addAddressToCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getCompanyIDFromWallet",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "meetingID",
          "type": "uint256"
        }
      ],
      "name": "getMeetingData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "meetingID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "chairpersonName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "numberOfMembers",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "contentHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "memberName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "memberRole",
                  "type": "string"
                }
              ],
              "internalType": "struct SafeMeeting.MemberRole[]",
              "name": "memberToRoles",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct SafeMeeting.MeetingData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "companyID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "meetingID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "chairpersonName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "timestamp",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "numberOfMembers",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "contentHash",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "memberNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "roles",
          "type": "string[]"
        }
      ],
      "name": "storeContent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb493dc5d3d23d378e65372787795b1591634096c7baae21441acc79efaab8d52",
  "receipt": {
    "to": null,
    "from": "0xdBA793F5A8273608e662ecCce312C5b879DC9b2B",
    "contractAddress": "0x03B3727CB7Eff7A9f158B7CD49e170Fb5E82a3ab",
    "transactionIndex": 6,
    "gasUsed": "1451085",
    "logsBloom": "0x
    "blockHash": "0xc3eecf4229f4e370b7bb0072ca62e3aa2d1b9d8852e28cc2d707167b3ccb1e79",
    "transactionHash": "0xb493dc5d3d23d378e65372787795b1591634096c7baae21441acc79efaab8d52",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 27426061,
        "transactionHash": "0xb493dc5d3d23d378e65372787795b1591634096c7baae21441acc79efaab8d52",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000dba793f5a8273608e662eccce312c5b879dc9b2b",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000ce362a27a2f7f00000000000000000000000000000000000000000000000002c68af0bb1400000000000000000000000000000000000000000000000012b61e76388d335c03cb00000000000000000000000000000000000000000000000002b9a78e1899d0810000000000000000000000000000000000000000000012b61e831befd5d6334a",
        "logIndex": 12,
        "blockHash": "0xc3eecf4229f4e370b7bb0072ca62e3aa2d1b9d8852e28cc2d707167b3ccb1e79"
      }
    ],
    "blockNumber": 27426061,
    "cumulativeGasUsed": "2031331",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e869d3c2c62c0d05bc5e3b80d8113ab4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"}],\"name\":\"SafeMeeting__AlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"}],\"name\":\"SafeMeeting__DoesNotHaveAccess\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"meetingID\",\"type\":\"uint256\"}],\"name\":\"SafeMeeting__MeetingNotListed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"}],\"name\":\"WalletListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"}],\"name\":\"addAddressToCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getCompanyIDFromWallet\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"meetingID\",\"type\":\"uint256\"}],\"name\":\"getMeetingData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"meetingID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chairpersonName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMembers\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"memberName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"memberRole\",\"type\":\"string\"}],\"internalType\":\"struct SafeMeeting.MemberRole[]\",\"name\":\"memberToRoles\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SafeMeeting.MeetingData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"companyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"meetingID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chairpersonName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMembers\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"memberNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"roles\",\"type\":\"string[]\"}],\"name\":\"storeContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Wahaj Javed\",\"details\":\"This implements simple mappings and events to accomplish the task\",\"kind\":\"dev\",\"methods\":{\"addAddressToCompany(address,uint256)\":{\"params\":{\"companyID\":\": the ID of the company\",\"walletAddress\":\": The address of the wallet of the user\"}},\"getCompanyIDFromWallet(address)\":{\"params\":{\"walletAddress\":\": The address of the wallet of the user\"},\"returns\":{\"_0\":\"The list of company IDs\"}},\"getMeetingData(uint256,uint256)\":{\"params\":{\"companyID\":\": the ID of the company\",\"meetingID\":\": the ID of the meeting to be accessed\"},\"returns\":{\"_0\":\"The requested meeting data\"}},\"storeContent(uint256,uint256,string,string,uint256,string,string[],string[])\":{\"params\":{\"chairpersonName\":\": The Name of the chairperson in the meeting\",\"companyID\":\": The ID of the company\",\"contentHash\":\": The Hash value of the content PDF\",\"meetingID\":\": The ID of the meeting recieved from the database\",\"memberNames\":\": The List of the names of all members\",\"numberOfMembers\":\": The number of members who attended the meeting\",\"roles\":\": The List of the roles of all members\",\"timestamp\":\": The time at which meeting was held\"}}},\"title\":\"Safe Meetings\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAddressToCompany(address,uint256)\":{\"notice\":\"Method for registering a wallet address to allow access to company data\"},\"getCompanyIDFromWallet(address)\":{\"notice\":\"Method for returning the list of company IDs accessible to the user\"},\"getMeetingData(uint256,uint256)\":{\"notice\":\": Method for returning the requested meeting data\"},\"storeContent(uint256,uint256,string,string,uint256,string,string[],string[])\":{\"notice\":\": Method for storing the meeting data into the specific company ID List\"}},\"notice\":\"This contract is for creating an untemperable storage for board meeting contents.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMeeting.sol\":\"SafeMeeting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMeeting.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\n\\n/* Errors */\\nerror SafeMeeting__DoesNotHaveAccess(address walletAddress, uint256 companyID);\\nerror SafeMeeting__AlreadyListed(address walletAddress, uint256 companyID);\\nerror SafeMeeting__MeetingNotListed(\\n    address walletAddress,\\n    uint256 companyID,\\n    uint256 meetingID\\n);\\n\\n/**\\n * @title Safe Meetings\\n * @author Wahaj Javed\\n * @notice This contract is for creating an untemperable storage for board meeting contents.\\n * @dev This implements simple mappings and events to accomplish the task\\n */\\ncontract SafeMeeting {\\n    /* Events */\\n    event WalletListed(\\n        address indexed walletAddress,\\n        uint256 indexed companyID\\n    );\\n    /* Structures */\\n    struct MemberRole {\\n        string memberName;\\n        string memberRole;\\n    }\\n    struct MeetingData {\\n        uint256 meetingID;\\n        string chairpersonName;\\n        string timestamp;\\n        uint256 numberOfMembers;\\n        string contentHash;\\n        MemberRole[] memberToRoles;\\n    }\\n    /* State Variables*/\\n    // List of the company IDs accessible to the specific wallet\\n    mapping(address => uint256[]) private s_addressToCompanyID;\\n    // the company ID pointing to the data of the meetings list\\n    mapping(uint256 => MeetingData[]) private s_idToMeetingData;\\n    /* Modifiers */\\n    modifier hasAccess(address walletAddress, uint256 companyID) {\\n        uint256[] memory arr = s_addressToCompanyID[walletAddress];\\n        bool exists = false;\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == companyID) {\\n                exists = true;\\n                break;\\n            }\\n        }\\n        if (!exists) {\\n            revert SafeMeeting__DoesNotHaveAccess(walletAddress, companyID);\\n        }\\n        _;\\n    }\\n    modifier alreadyListed(address walletAddress, uint256 companyID) {\\n        uint256[] memory arr = s_addressToCompanyID[walletAddress];\\n        bool exists = false;\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (arr[i] == companyID) {\\n                exists = true;\\n                break;\\n            }\\n        }\\n        if (exists) {\\n            revert SafeMeeting__AlreadyListed(walletAddress, companyID);\\n        }\\n        _;\\n    }\\n    modifier IDExists(uint256 companyID, uint256 meetingID) {\\n        MeetingData[] memory arr = s_idToMeetingData[companyID];\\n        if (meetingID >= arr.length) {\\n            revert SafeMeeting__MeetingNotListed(\\n                msg.sender,\\n                companyID,\\n                meetingID\\n            );\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice : Method for storing the meeting data into the specific company ID List\\n     * @param companyID: The ID of the company\\n     * @param meetingID: The ID of the meeting recieved from the database\\n     * @param chairpersonName: The Name of the chairperson in the meeting\\n     * @param timestamp: The time at which meeting was held\\n     * @param numberOfMembers: The number of members who attended the meeting\\n     * @param contentHash: The Hash value of the content PDF\\n     * @param memberNames: The List of the names of all members\\n     * @param roles: The List of the roles of all members\\n     */\\n    function storeContent(\\n        uint256 companyID,\\n        uint256 meetingID,\\n        string memory chairpersonName,\\n        string memory timestamp,\\n        uint256 numberOfMembers,\\n        string memory contentHash,\\n        string[] memory memberNames,\\n        string[] memory roles\\n    ) public hasAccess(msg.sender, companyID) {\\n        MeetingData storage meetData = s_idToMeetingData[companyID].push();\\n        meetData.meetingID = meetingID;\\n        meetData.chairpersonName = chairpersonName;\\n        meetData.timestamp = timestamp;\\n        meetData.numberOfMembers = numberOfMembers;\\n        meetData.contentHash = contentHash;\\n        for (uint256 i = 0; i < memberNames.length; i++) {\\n            meetData.memberToRoles.push();\\n            MemberRole memory mem = MemberRole(memberNames[i], roles[i]);\\n            meetData.memberToRoles[i] = mem;\\n        }\\n    }\\n\\n    /**\\n     * @notice : Method for returning the requested meeting data\\n     * @param companyID: the ID of the company\\n     * @param meetingID : the ID of the meeting to be accessed\\n     * @return The requested meeting data\\n     */\\n    function getMeetingData(uint256 companyID, uint256 meetingID)\\n        public\\n        view\\n        hasAccess(msg.sender, companyID)\\n        IDExists(companyID, meetingID)\\n        returns (MeetingData memory)\\n    {\\n        return s_idToMeetingData[companyID][meetingID];\\n    }\\n\\n    /**\\n     * @notice Method for registering a wallet address to allow access to company data\\n     * @param walletAddress: The address of the wallet of the user\\n     * @param companyID : the ID of the company\\n     */\\n    function addAddressToCompany(address walletAddress, uint256 companyID)\\n        external\\n        alreadyListed(walletAddress, companyID)\\n    {\\n        s_addressToCompanyID[walletAddress].push(companyID);\\n        emit WalletListed(walletAddress, companyID);\\n    }\\n\\n    /**\\n     * @notice Method for returning the list of company IDs accessible to the user\\n     * @param walletAddress: The address of the wallet of the user\\n     * @return The list of company IDs\\n     */\\n    function getCompanyIDFromWallet(address walletAddress)\\n        external\\n        view\\n        returns (uint256[] memory)\\n    {\\n        return s_addressToCompanyID[walletAddress];\\n    }\\n}\\n\",\"keccak256\":\"0x55c5b113f60635f0ef4dd2c3005cf97e6053da77382e4eac5598229fe488361d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611958806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c0c8afe14610051578063211a2cd41461006d578063b5ed1a0d1461009d578063fb3858d5146100cd575b600080fd5b61006b60048036038101906100669190611221565b6100e9565b005b61008760048036038101906100829190611363565b61039d565b60405161009491906115de565b60405180910390f35b6100b760048036038101906100b2919061165e565b610c67565b6040516100c4919061173a565b60405180910390f35b6100e760048036038101906100e2919061175c565b610cfd565b005b338860008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561017557602002820191906000526020600020905b815481526020019060010190808311610161575b505050505090506000805b82518110156101c7578383828151811061019d5761019c61179c565b5b602002602001015114156101b457600191506101c7565b80806101bf906117fa565b915050610180565b508061020c5783836040517f614281fb000000000000000000000000000000000000000000000000000000008152600401610203929190611861565b60405180910390fd5b6000600160008e815260200190815260200160002060018160018154018082558091505003906000526020600020906006020190508b81600001819055508a816001019080519060200190610262929190610ed2565b508981600201908051906020019061027b929190610ed2565b508881600301819055508781600401908051906020019061029d929190610ed2565b5060005b875181101561038d578160050160018160018154018082558091505003906000526020600020905050600060405180604001604052808a84815181106102ea576102e961179c565b5b6020026020010151815260200189848151811061030a5761030961179c565b5b602002602001015181525090508083600501838154811061032e5761032d61179c565b5b90600052602060002090600202016000820151816000019080519060200190610358929190610ed2565b506020820151816001019080519060200190610375929190610ed2565b50905050508080610385906117fa565b9150506102a1565b5050505050505050505050505050565b6103a5610f58565b338360008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561043157602002820191906000526020600020905b81548152602001906001019080831161041d575b505050505090506000805b825181101561048357838382815181106104595761045861179c565b5b602002602001015114156104705760019150610483565b808061047b906117fa565b91505061043c565b50806104c85783836040517f614281fb0000000000000000000000000000000000000000000000000000000081526004016104bf929190611861565b60405180910390fd5b8686600060016000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561087e57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461053c906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610568906118b9565b80156105b55780601f1061058a576101008083540402835291602001916105b5565b820191906000526020600020905b81548152906001019060200180831161059857829003601f168201915b505050505081526020016002820180546105ce906118b9565b80601f01602080910402602001604051908101604052809291908181526020018280546105fa906118b9565b80156106475780601f1061061c57610100808354040283529160200191610647565b820191906000526020600020905b81548152906001019060200180831161062a57829003601f168201915b505050505081526020016003820154815260200160048201805461066a906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610696906118b9565b80156106e35780601f106106b8576101008083540402835291602001916106e3565b820191906000526020600020905b8154815290600101906020018083116106c657829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156108675783829060005260206000209060020201604051806040016040529081600082018054610744906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610770906118b9565b80156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b505050505081526020016001820180546107d6906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610802906118b9565b801561084f5780601f106108245761010080835404028352916020019161084f565b820191906000526020600020905b81548152906001019060200180831161083257829003601f168201915b50505050508152505081526020019060010190610711565b5050505081525050815260200190600101906104ff565b505050509050805182106108cd573383836040517f042d9e660000000000000000000000000000000000000000000000000000000081526004016108c4939291906118eb565b60405180910390fd5b600160008b815260200190815260200160002089815481106108f2576108f161179c565b5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054610925906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610951906118b9565b801561099e5780601f106109735761010080835404028352916020019161099e565b820191906000526020600020905b81548152906001019060200180831161098157829003601f168201915b505050505081526020016002820180546109b7906118b9565b80601f01602080910402602001604051908101604052809291908181526020018280546109e3906118b9565b8015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b5050505050815260200160038201548152602001600482018054610a53906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7f906118b9565b8015610acc5780601f10610aa157610100808354040283529160200191610acc565b820191906000526020600020905b815481529060010190602001808311610aaf57829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610c505783829060005260206000209060020201604051806040016040529081600082018054610b2d906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b59906118b9565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b50505050508152602001600182018054610bbf906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610beb906118b9565b8015610c385780601f10610c0d57610100808354040283529160200191610c38565b820191906000526020600020905b815481529060010190602001808311610c1b57829003601f168201915b50505050508152505081526020019060010190610afa565b505050508152505097505050505050505092915050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610cf157602002820191906000526020600020905b815481526020019060010190808311610cdd575b50505050509050919050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d8957602002820191906000526020600020905b815481526020019060010190808311610d75575b505050505090506000805b8251811015610ddb5783838281518110610db157610db061179c565b5b60200260200101511415610dc85760019150610ddb565b8080610dd3906117fa565b915050610d94565b508015610e215783836040517f2f966475000000000000000000000000000000000000000000000000000000008152600401610e18929190611861565b60405180910390fd5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020859080600181540180825580915050600190039060005260206000200160009091909190915055848673ffffffffffffffffffffffffffffffffffffffff167fddae5033827d91d189243ddc6c9ea3e1a45dc59a9f20caa36990f6ba2f62753060405160405180910390a3505050505050565b828054610ede906118b9565b90600052602060002090601f016020900481019282610f005760008555610f47565b82601f10610f1957805160ff1916838001178555610f47565b82800160010185558215610f47579182015b82811115610f46578251825591602001919060010190610f2b565b5b509050610f549190610f8e565b5090565b6040518060c001604052806000815260200160608152602001606081526020016000815260200160608152602001606081525090565b5b80821115610fa7576000816000905550600101610f8f565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610fd281610fbf565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104882610fff565b810181811067ffffffffffffffff8211171561106757611066611010565b5b80604052505050565b600061107a610fab565b9050611086828261103f565b919050565b600067ffffffffffffffff8211156110a6576110a5611010565b5b6110af82610fff565b9050602081019050919050565b82818337600083830152505050565b60006110de6110d98461108b565b611070565b9050828152602081018484840111156110fa576110f9610ffa565b5b6111058482856110bc565b509392505050565b600082601f83011261112257611121610ff5565b5b81356111328482602086016110cb565b91505092915050565b600067ffffffffffffffff82111561115657611155611010565b5b602082029050602081019050919050565b600080fd5b600061117f61117a8461113b565b611070565b905080838252602082019050602084028301858111156111a2576111a1611167565b5b835b818110156111e957803567ffffffffffffffff8111156111c7576111c6610ff5565b5b8086016111d4898261110d565b855260208501945050506020810190506111a4565b5050509392505050565b600082601f83011261120857611207610ff5565b5b813561121884826020860161116c565b91505092915050565b600080600080600080600080610100898b03121561124257611241610fb5565b5b60006112508b828c01610fe0565b98505060206112618b828c01610fe0565b975050604089013567ffffffffffffffff81111561128257611281610fba565b5b61128e8b828c0161110d565b965050606089013567ffffffffffffffff8111156112af576112ae610fba565b5b6112bb8b828c0161110d565b95505060806112cc8b828c01610fe0565b94505060a089013567ffffffffffffffff8111156112ed576112ec610fba565b5b6112f98b828c0161110d565b93505060c089013567ffffffffffffffff81111561131a57611319610fba565b5b6113268b828c016111f3565b92505060e089013567ffffffffffffffff81111561134757611346610fba565b5b6113538b828c016111f3565b9150509295985092959890939650565b6000806040838503121561137a57611379610fb5565b5b600061138885828601610fe0565b925050602061139985828601610fe0565b9150509250929050565b6113ac81610fbf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113ec5780820151818401526020810190506113d1565b838111156113fb576000848401525b50505050565b600061140c826113b2565b61141681856113bd565b93506114268185602086016113ce565b61142f81610fff565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060408301600083015184820360008601526114838282611401565b9150506020830151848203602086015261149d8282611401565b9150508091505092915050565b60006114b68383611466565b905092915050565b6000602082019050919050565b60006114d68261143a565b6114e08185611445565b9350836020820285016114f285611456565b8060005b8581101561152e578484038952815161150f85826114aa565b945061151a836114be565b925060208a019950506001810190506114f6565b50829750879550505050505092915050565b600060c08301600083015161155860008601826113a3565b50602083015184820360208601526115708282611401565b9150506040830151848203604086015261158a8282611401565b915050606083015161159f60608601826113a3565b50608083015184820360808601526115b78282611401565b91505060a083015184820360a08601526115d182826114cb565b9150508091505092915050565b600060208201905081810360008301526115f88184611540565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061162b82611600565b9050919050565b61163b81611620565b811461164657600080fd5b50565b60008135905061165881611632565b92915050565b60006020828403121561167457611673610fb5565b5b600061168284828501611649565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006116c383836113a3565b60208301905092915050565b6000602082019050919050565b60006116e78261168b565b6116f18185611696565b93506116fc836116a7565b8060005b8381101561172d57815161171488826116b7565b975061171f836116cf565b925050600181019050611700565b5085935050505092915050565b6000602082019050818103600083015261175481846116dc565b905092915050565b6000806040838503121561177357611772610fb5565b5b600061178185828601611649565b925050602061179285828601610fe0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180582610fbf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611838576118376117cb565b5b600182019050919050565b61184c81611620565b82525050565b61185b81610fbf565b82525050565b60006040820190506118766000830185611843565b6118836020830184611852565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118d157607f821691505b602082108114156118e5576118e461188a565b5b50919050565b60006060820190506119006000830186611843565b61190d6020830185611852565b61191a6040830184611852565b94935050505056fea26469706673582212205b52368a44f2f95477a09a386baaf3d56ff4d1dc553ef9da05e7d5993b2827a464736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631c0c8afe14610051578063211a2cd41461006d578063b5ed1a0d1461009d578063fb3858d5146100cd575b600080fd5b61006b60048036038101906100669190611221565b6100e9565b005b61008760048036038101906100829190611363565b61039d565b60405161009491906115de565b60405180910390f35b6100b760048036038101906100b2919061165e565b610c67565b6040516100c4919061173a565b60405180910390f35b6100e760048036038101906100e2919061175c565b610cfd565b005b338860008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561017557602002820191906000526020600020905b815481526020019060010190808311610161575b505050505090506000805b82518110156101c7578383828151811061019d5761019c61179c565b5b602002602001015114156101b457600191506101c7565b80806101bf906117fa565b915050610180565b508061020c5783836040517f614281fb000000000000000000000000000000000000000000000000000000008152600401610203929190611861565b60405180910390fd5b6000600160008e815260200190815260200160002060018160018154018082558091505003906000526020600020906006020190508b81600001819055508a816001019080519060200190610262929190610ed2565b508981600201908051906020019061027b929190610ed2565b508881600301819055508781600401908051906020019061029d929190610ed2565b5060005b875181101561038d578160050160018160018154018082558091505003906000526020600020905050600060405180604001604052808a84815181106102ea576102e961179c565b5b6020026020010151815260200189848151811061030a5761030961179c565b5b602002602001015181525090508083600501838154811061032e5761032d61179c565b5b90600052602060002090600202016000820151816000019080519060200190610358929190610ed2565b506020820151816001019080519060200190610375929190610ed2565b50905050508080610385906117fa565b9150506102a1565b5050505050505050505050505050565b6103a5610f58565b338360008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561043157602002820191906000526020600020905b81548152602001906001019080831161041d575b505050505090506000805b825181101561048357838382815181106104595761045861179c565b5b602002602001015114156104705760019150610483565b808061047b906117fa565b91505061043c565b50806104c85783836040517f614281fb0000000000000000000000000000000000000000000000000000000081526004016104bf929190611861565b60405180910390fd5b8686600060016000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561087e57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805461053c906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610568906118b9565b80156105b55780601f1061058a576101008083540402835291602001916105b5565b820191906000526020600020905b81548152906001019060200180831161059857829003601f168201915b505050505081526020016002820180546105ce906118b9565b80601f01602080910402602001604051908101604052809291908181526020018280546105fa906118b9565b80156106475780601f1061061c57610100808354040283529160200191610647565b820191906000526020600020905b81548152906001019060200180831161062a57829003601f168201915b505050505081526020016003820154815260200160048201805461066a906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610696906118b9565b80156106e35780601f106106b8576101008083540402835291602001916106e3565b820191906000526020600020905b8154815290600101906020018083116106c657829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156108675783829060005260206000209060020201604051806040016040529081600082018054610744906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610770906118b9565b80156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b505050505081526020016001820180546107d6906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610802906118b9565b801561084f5780601f106108245761010080835404028352916020019161084f565b820191906000526020600020905b81548152906001019060200180831161083257829003601f168201915b50505050508152505081526020019060010190610711565b5050505081525050815260200190600101906104ff565b505050509050805182106108cd573383836040517f042d9e660000000000000000000000000000000000000000000000000000000081526004016108c4939291906118eb565b60405180910390fd5b600160008b815260200190815260200160002089815481106108f2576108f161179c565b5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054610925906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610951906118b9565b801561099e5780601f106109735761010080835404028352916020019161099e565b820191906000526020600020905b81548152906001019060200180831161098157829003601f168201915b505050505081526020016002820180546109b7906118b9565b80601f01602080910402602001604051908101604052809291908181526020018280546109e3906118b9565b8015610a305780601f10610a0557610100808354040283529160200191610a30565b820191906000526020600020905b815481529060010190602001808311610a1357829003601f168201915b5050505050815260200160038201548152602001600482018054610a53906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7f906118b9565b8015610acc5780601f10610aa157610100808354040283529160200191610acc565b820191906000526020600020905b815481529060010190602001808311610aaf57829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610c505783829060005260206000209060020201604051806040016040529081600082018054610b2d906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b59906118b9565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b50505050508152602001600182018054610bbf906118b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610beb906118b9565b8015610c385780601f10610c0d57610100808354040283529160200191610c38565b820191906000526020600020905b815481529060010190602001808311610c1b57829003601f168201915b50505050508152505081526020019060010190610afa565b505050508152505097505050505050505092915050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610cf157602002820191906000526020600020905b815481526020019060010190808311610cdd575b50505050509050919050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d8957602002820191906000526020600020905b815481526020019060010190808311610d75575b505050505090506000805b8251811015610ddb5783838281518110610db157610db061179c565b5b60200260200101511415610dc85760019150610ddb565b8080610dd3906117fa565b915050610d94565b508015610e215783836040517f2f966475000000000000000000000000000000000000000000000000000000008152600401610e18929190611861565b60405180910390fd5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020859080600181540180825580915050600190039060005260206000200160009091909190915055848673ffffffffffffffffffffffffffffffffffffffff167fddae5033827d91d189243ddc6c9ea3e1a45dc59a9f20caa36990f6ba2f62753060405160405180910390a3505050505050565b828054610ede906118b9565b90600052602060002090601f016020900481019282610f005760008555610f47565b82601f10610f1957805160ff1916838001178555610f47565b82800160010185558215610f47579182015b82811115610f46578251825591602001919060010190610f2b565b5b509050610f549190610f8e565b5090565b6040518060c001604052806000815260200160608152602001606081526020016000815260200160608152602001606081525090565b5b80821115610fa7576000816000905550600101610f8f565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610fd281610fbf565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104882610fff565b810181811067ffffffffffffffff8211171561106757611066611010565b5b80604052505050565b600061107a610fab565b9050611086828261103f565b919050565b600067ffffffffffffffff8211156110a6576110a5611010565b5b6110af82610fff565b9050602081019050919050565b82818337600083830152505050565b60006110de6110d98461108b565b611070565b9050828152602081018484840111156110fa576110f9610ffa565b5b6111058482856110bc565b509392505050565b600082601f83011261112257611121610ff5565b5b81356111328482602086016110cb565b91505092915050565b600067ffffffffffffffff82111561115657611155611010565b5b602082029050602081019050919050565b600080fd5b600061117f61117a8461113b565b611070565b905080838252602082019050602084028301858111156111a2576111a1611167565b5b835b818110156111e957803567ffffffffffffffff8111156111c7576111c6610ff5565b5b8086016111d4898261110d565b855260208501945050506020810190506111a4565b5050509392505050565b600082601f83011261120857611207610ff5565b5b813561121884826020860161116c565b91505092915050565b600080600080600080600080610100898b03121561124257611241610fb5565b5b60006112508b828c01610fe0565b98505060206112618b828c01610fe0565b975050604089013567ffffffffffffffff81111561128257611281610fba565b5b61128e8b828c0161110d565b965050606089013567ffffffffffffffff8111156112af576112ae610fba565b5b6112bb8b828c0161110d565b95505060806112cc8b828c01610fe0565b94505060a089013567ffffffffffffffff8111156112ed576112ec610fba565b5b6112f98b828c0161110d565b93505060c089013567ffffffffffffffff81111561131a57611319610fba565b5b6113268b828c016111f3565b92505060e089013567ffffffffffffffff81111561134757611346610fba565b5b6113538b828c016111f3565b9150509295985092959890939650565b6000806040838503121561137a57611379610fb5565b5b600061138885828601610fe0565b925050602061139985828601610fe0565b9150509250929050565b6113ac81610fbf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113ec5780820151818401526020810190506113d1565b838111156113fb576000848401525b50505050565b600061140c826113b2565b61141681856113bd565b93506114268185602086016113ce565b61142f81610fff565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060408301600083015184820360008601526114838282611401565b9150506020830151848203602086015261149d8282611401565b9150508091505092915050565b60006114b68383611466565b905092915050565b6000602082019050919050565b60006114d68261143a565b6114e08185611445565b9350836020820285016114f285611456565b8060005b8581101561152e578484038952815161150f85826114aa565b945061151a836114be565b925060208a019950506001810190506114f6565b50829750879550505050505092915050565b600060c08301600083015161155860008601826113a3565b50602083015184820360208601526115708282611401565b9150506040830151848203604086015261158a8282611401565b915050606083015161159f60608601826113a3565b50608083015184820360808601526115b78282611401565b91505060a083015184820360a08601526115d182826114cb565b9150508091505092915050565b600060208201905081810360008301526115f88184611540565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061162b82611600565b9050919050565b61163b81611620565b811461164657600080fd5b50565b60008135905061165881611632565b92915050565b60006020828403121561167457611673610fb5565b5b600061168284828501611649565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006116c383836113a3565b60208301905092915050565b6000602082019050919050565b60006116e78261168b565b6116f18185611696565b93506116fc836116a7565b8060005b8381101561172d57815161171488826116b7565b975061171f836116cf565b925050600181019050611700565b5085935050505092915050565b6000602082019050818103600083015261175481846116dc565b905092915050565b6000806040838503121561177357611772610fb5565b5b600061178185828601611649565b925050602061179285828601610fe0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180582610fbf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611838576118376117cb565b5b600182019050919050565b61184c81611620565b82525050565b61185b81610fbf565b82525050565b60006040820190506118766000830185611843565b6118836020830184611852565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118d157607f821691505b602082108114156118e5576118e461188a565b5b50919050565b60006060820190506119006000830186611843565b61190d6020830185611852565b61191a6040830184611852565b94935050505056fea26469706673582212205b52368a44f2f95477a09a386baaf3d56ff4d1dc553ef9da05e7d5993b2827a464736f6c63430008080033",
  "devdoc": {
    "author": "Wahaj Javed",
    "details": "This implements simple mappings and events to accomplish the task",
    "kind": "dev",
    "methods": {
      "addAddressToCompany(address,uint256)": {
        "params": {
          "companyID": ": the ID of the company",
          "walletAddress": ": The address of the wallet of the user"
        }
      },
      "getCompanyIDFromWallet(address)": {
        "params": {
          "walletAddress": ": The address of the wallet of the user"
        },
        "returns": {
          "_0": "The list of company IDs"
        }
      },
      "getMeetingData(uint256,uint256)": {
        "params": {
          "companyID": ": the ID of the company",
          "meetingID": ": the ID of the meeting to be accessed"
        },
        "returns": {
          "_0": "The requested meeting data"
        }
      },
      "storeContent(uint256,uint256,string,string,uint256,string,string[],string[])": {
        "params": {
          "chairpersonName": ": The Name of the chairperson in the meeting",
          "companyID": ": The ID of the company",
          "contentHash": ": The Hash value of the content PDF",
          "meetingID": ": The ID of the meeting recieved from the database",
          "memberNames": ": The List of the names of all members",
          "numberOfMembers": ": The number of members who attended the meeting",
          "roles": ": The List of the roles of all members",
          "timestamp": ": The time at which meeting was held"
        }
      }
    },
    "title": "Safe Meetings",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAddressToCompany(address,uint256)": {
        "notice": "Method for registering a wallet address to allow access to company data"
      },
      "getCompanyIDFromWallet(address)": {
        "notice": "Method for returning the list of company IDs accessible to the user"
      },
      "getMeetingData(uint256,uint256)": {
        "notice": ": Method for returning the requested meeting data"
      },
      "storeContent(uint256,uint256,string,string,uint256,string,string[],string[])": {
        "notice": ": Method for storing the meeting data into the specific company ID List"
      }
    },
    "notice": "This contract is for creating an untemperable storage for board meeting contents.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/SafeMeeting.sol:SafeMeeting",
        "label": "s_addressToCompanyID",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 59,
        "contract": "contracts/SafeMeeting.sol:SafeMeeting",
        "label": "s_idToMeetingData",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_array(t_struct(MeetingData)48_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(MeetingData)48_storage)dyn_storage": {
        "base": "t_struct(MeetingData)48_storage",
        "encoding": "dynamic_array",
        "label": "struct SafeMeeting.MeetingData[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(MemberRole)33_storage)dyn_storage": {
        "base": "t_struct(MemberRole)33_storage",
        "encoding": "dynamic_array",
        "label": "struct SafeMeeting.MemberRole[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(MeetingData)48_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SafeMeeting.MeetingData[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(MeetingData)48_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MeetingData)48_storage": {
        "encoding": "inplace",
        "label": "struct SafeMeeting.MeetingData",
        "members": [
          {
            "astId": 35,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "meetingID",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 37,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "chairpersonName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 39,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 41,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "numberOfMembers",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 43,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "contentHash",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 47,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "memberToRoles",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MemberRole)33_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(MemberRole)33_storage": {
        "encoding": "inplace",
        "label": "struct SafeMeeting.MemberRole",
        "members": [
          {
            "astId": 30,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "memberName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "memberRole",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}