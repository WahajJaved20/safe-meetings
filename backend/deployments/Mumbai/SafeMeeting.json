{
  "address": "0x39d775Fa6f1193556a852B185bD55bF89832fD08",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        }
      ],
      "name": "SafeMeeting__AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        }
      ],
      "name": "SafeMeeting__DoesNotHaveAccess",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "meetingID",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "chairpersonName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "timestamp",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numberOfMembers",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "contentHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "memberName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "memberRole",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct SafeMeeting.MemberRole[]",
          "name": "memberToRoles",
          "type": "tuple[]"
        }
      ],
      "name": "DataUploaded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        }
      ],
      "name": "WalletListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        }
      ],
      "name": "addAddressToCompany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "getCompanyIDFromWallet",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "meetingID",
          "type": "string"
        }
      ],
      "name": "getMeetingData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "meetingID",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "chairpersonName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "numberOfMembers",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "contentHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "memberName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "memberRole",
                  "type": "string"
                }
              ],
              "internalType": "struct SafeMeeting.MemberRole[]",
              "name": "memberToRoles",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct SafeMeeting.MeetingData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "companyID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "meetingID",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "chairpersonName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "timestamp",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "numberOfMembers",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "contentHash",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "memberNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "roles",
          "type": "string[]"
        }
      ],
      "name": "storeContent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x066ac87fad59b9fcc33bdeee162aaf391952cf5da80fa70c25c1e1337902bdc6",
  "receipt": {
    "to": null,
    "from": "0xdBA793F5A8273608e662ecCce312C5b879DC9b2B",
    "contractAddress": "0x39d775Fa6f1193556a852B185bD55bF89832fD08",
    "transactionIndex": 2,
    "gasUsed": "1590602",
    "logsBloom": "0x
    "blockHash": "0xdcdcd1542eaeeee525734fa609d76f7d3afd774b631895519b8695d3715a6f65",
    "transactionHash": "0x066ac87fad59b9fcc33bdeee162aaf391952cf5da80fa70c25c1e1337902bdc6",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27484391,
        "transactionHash": "0x066ac87fad59b9fcc33bdeee162aaf391952cf5da80fa70c25c1e1337902bdc6",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000dba793f5a8273608e662eccce312c5b879dc9b2b",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000a99071e9401df400000000000000000000000000000000000000000000000003949d008f3c7c1c0000000000000000000000000000000000000000000005bc7f6293014626b64c00000000000000000000000000000000000000000000000002eb0c8ea5fc5e280000000000000000000000000000000000000000000005bc800c23732f66d440",
        "logIndex": 6,
        "blockHash": "0xdcdcd1542eaeeee525734fa609d76f7d3afd774b631895519b8695d3715a6f65"
      }
    ],
    "blockNumber": 27484391,
    "cumulativeGasUsed": "1714534",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "f8618878da788d450a024bebecc64f6e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"}],\"name\":\"SafeMeeting__AlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"}],\"name\":\"SafeMeeting__DoesNotHaveAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"meetingID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"chairpersonName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberOfMembers\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"memberName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"memberRole\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SafeMeeting.MemberRole[]\",\"name\":\"memberToRoles\",\"type\":\"tuple[]\"}],\"name\":\"DataUploaded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"}],\"name\":\"WalletListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"}],\"name\":\"addAddressToCompany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getCompanyIDFromWallet\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"meetingID\",\"type\":\"string\"}],\"name\":\"getMeetingData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"meetingID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"chairpersonName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMembers\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"memberName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"memberRole\",\"type\":\"string\"}],\"internalType\":\"struct SafeMeeting.MemberRole[]\",\"name\":\"memberToRoles\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SafeMeeting.MeetingData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"meetingID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"chairpersonName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMembers\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"memberNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"roles\",\"type\":\"string[]\"}],\"name\":\"storeContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Wahaj Javed\",\"details\":\"This implements simple mappings and events to accomplish the task\",\"kind\":\"dev\",\"methods\":{\"addAddressToCompany(address,string)\":{\"params\":{\"companyID\":\": the ID of the company\",\"walletAddress\":\": The address of the wallet of the user\"}},\"getCompanyIDFromWallet(address)\":{\"params\":{\"walletAddress\":\": The address of the wallet of the user\"},\"returns\":{\"_0\":\"The list of company IDs\"}},\"getMeetingData(string,string)\":{\"params\":{\"companyID\":\": the ID of the company\",\"meetingID\":\": the ID of the meeting to be accessed\"},\"returns\":{\"_0\":\"The requested meeting data\"}},\"storeContent(string,string,string,string,uint256,string,string[],string[])\":{\"params\":{\"chairpersonName\":\": The Name of the chairperson in the meeting\",\"companyID\":\": The ID of the company\",\"contentHash\":\": The Hash value of the content PDF\",\"meetingID\":\": The ID of the meeting recieved from the database\",\"memberNames\":\": The List of the names of all members\",\"numberOfMembers\":\": The number of members who attended the meeting\",\"roles\":\": The List of the roles of all members\",\"timestamp\":\": The time at which meeting was held\"}}},\"title\":\"Safe Meetings\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAddressToCompany(address,string)\":{\"notice\":\"Method for registering a wallet address to allow access to company data\"},\"getCompanyIDFromWallet(address)\":{\"notice\":\"Method for returning the list of company IDs accessible to the user\"},\"getMeetingData(string,string)\":{\"notice\":\": Method for returning the requested meeting data\"},\"storeContent(string,string,string,string,uint256,string,string[],string[])\":{\"notice\":\": Method for storing the meeting data into the specific company ID List\"}},\"notice\":\"This contract is for creating an untemperable storage for board meeting contents.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeMeeting.sol\":\"SafeMeeting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SafeMeeting.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\n\\n/* Errors */\\nerror SafeMeeting__DoesNotHaveAccess(address walletAddress, string companyID);\\nerror SafeMeeting__AlreadyListed(address walletAddress, string companyID);\\nerror SafeMeeting__MeetingNotListed(\\n    address walletAddress,\\n    string companyID,\\n    string meetingID\\n);\\n\\n/**\\n * @title Safe Meetings\\n * @author Wahaj Javed\\n * @notice This contract is for creating an untemperable storage for board meeting contents.\\n * @dev This implements simple mappings and events to accomplish the task\\n */\\ncontract SafeMeeting {\\n    /* Events */\\n    event WalletListed(address indexed walletAddress, string indexed companyID);\\n    event DataUploaded(\\n        string indexed companyID,\\n        string indexed meetingID,\\n        string chairpersonName,\\n        string timestamp,\\n        uint256 numberOfMembers,\\n        string indexed contentHash,\\n        MemberRole[] memberToRoles\\n    );\\n    /* Structures */\\n    struct MemberRole {\\n        string memberName;\\n        string memberRole;\\n    }\\n    struct MeetingData {\\n        string meetingID;\\n        string chairpersonName;\\n        string timestamp;\\n        uint256 numberOfMembers;\\n        string contentHash;\\n        MemberRole[] memberToRoles;\\n    }\\n    /* State Variables*/\\n    // List of the company IDs accessible to the specific wallet\\n    mapping(address => string[]) private s_addressToCompanyID;\\n    // the company ID pointing to the data of the meetings list\\n    mapping(string => mapping(string => MeetingData)) private s_idToMeetingData;\\n    /* Modifiers */\\n    modifier hasAccess(address walletAddress, string memory companyID) {\\n        string[] memory arr = s_addressToCompanyID[walletAddress];\\n        bool exists = false;\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (keccak256(bytes(arr[i])) == keccak256(bytes(companyID))) {\\n                exists = true;\\n                break;\\n            }\\n        }\\n        if (!exists) {\\n            revert SafeMeeting__DoesNotHaveAccess(walletAddress, companyID);\\n        }\\n        _;\\n    }\\n    modifier alreadyListed(address walletAddress, string memory companyID) {\\n        string[] memory arr = s_addressToCompanyID[walletAddress];\\n        bool exists = false;\\n        for (uint256 i = 0; i < arr.length; i++) {\\n            if (keccak256(bytes(arr[i])) == keccak256(bytes(companyID))) {\\n                exists = true;\\n                break;\\n            }\\n        }\\n        if (exists) {\\n            revert SafeMeeting__AlreadyListed(walletAddress, companyID);\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice : Method for storing the meeting data into the specific company ID List\\n     * @param companyID: The ID of the company\\n     * @param meetingID: The ID of the meeting recieved from the database\\n     * @param chairpersonName: The Name of the chairperson in the meeting\\n     * @param timestamp: The time at which meeting was held\\n     * @param numberOfMembers: The number of members who attended the meeting\\n     * @param contentHash: The Hash value of the content PDF\\n     * @param memberNames: The List of the names of all members\\n     * @param roles: The List of the roles of all members\\n     */\\n    function storeContent(\\n        string memory companyID,\\n        string memory meetingID,\\n        string memory chairpersonName,\\n        string memory timestamp,\\n        uint256 numberOfMembers,\\n        string memory contentHash,\\n        string[] memory memberNames,\\n        string[] memory roles\\n    ) public hasAccess(msg.sender, companyID) {\\n        MeetingData storage meetData = s_idToMeetingData[companyID][meetingID];\\n        meetData.meetingID = meetingID;\\n        meetData.chairpersonName = chairpersonName;\\n        meetData.timestamp = timestamp;\\n        meetData.numberOfMembers = numberOfMembers;\\n        meetData.contentHash = contentHash;\\n        for (uint256 i = 0; i < memberNames.length; i++) {\\n            meetData.memberToRoles.push();\\n            MemberRole memory mem = MemberRole(memberNames[i], roles[i]);\\n            meetData.memberToRoles[i] = mem;\\n        }\\n        emit DataUploaded(\\n            companyID,\\n            meetingID,\\n            chairpersonName,\\n            timestamp,\\n            numberOfMembers,\\n            contentHash,\\n            meetData.memberToRoles\\n        );\\n    }\\n\\n    /**\\n     * @notice : Method for returning the requested meeting data\\n     * @param companyID: the ID of the company\\n     * @param meetingID : the ID of the meeting to be accessed\\n     * @return The requested meeting data\\n     */\\n    function getMeetingData(string memory companyID, string memory meetingID)\\n        public\\n        view\\n        hasAccess(msg.sender, companyID)\\n        returns (MeetingData memory)\\n    {\\n        return s_idToMeetingData[companyID][meetingID];\\n    }\\n\\n    /**\\n     * @notice Method for registering a wallet address to allow access to company data\\n     * @param walletAddress: The address of the wallet of the user\\n     * @param companyID : the ID of the company\\n     */\\n    function addAddressToCompany(address walletAddress, string memory companyID)\\n        external\\n        alreadyListed(walletAddress, companyID)\\n    {\\n        s_addressToCompanyID[walletAddress].push(companyID);\\n        emit WalletListed(walletAddress, companyID);\\n    }\\n\\n    /**\\n     * @notice Method for returning the list of company IDs accessible to the user\\n     * @param walletAddress: The address of the wallet of the user\\n     * @return The list of company IDs\\n     */\\n    function getCompanyIDFromWallet(address walletAddress)\\n        external\\n        view\\n        returns (string[] memory)\\n    {\\n        return s_addressToCompanyID[walletAddress];\\n    }\\n}\\n\",\"keccak256\":\"0x58f0ae578a15a131c3cefc14ac5da3018407f1c1c36d1c8e4aa07ec276245697\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611bdc806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063088a8df1146100515780633bae9fd71461006d578063b5ed1a0d14610089578063b965d74d146100b9575b600080fd5b61006b600480360381019061006691906110db565b6100e9565b005b61008760048036038101906100829190611253565b610375565b005b6100a3600480360381019061009e91906113cd565b610753565b6040516100b09190611544565b60405180910390f35b6100d360048036038101906100ce9190611566565b61086a565b6040516100e09190611798565b60405180910390f35b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156101f757838290600052602060002001805461016a906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610196906117e9565b80156101e35780601f106101b8576101008083540402835291602001916101e3565b820191906000526020600020905b8154815290600101906020018083116101c657829003601f168201915b50505050508152602001906001019061014b565b5050505090506000805b82518110156102565783805190602001208382815181106102255761022461181b565b5b60200260200101518051906020012014156102435760019150610256565b808061024e90611879565b915050610201565b50801561029c5783836040517fa8bd9d5400000000000000000000000000000000000000000000000000000000815260040161029392919061191b565b60405180910390fd5b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610313929190610e4a565b50846040516103229190611987565b60405180910390208673ffffffffffffffffffffffffffffffffffffffff167f7b88b3dc075cd1bfe11cd0065b9f37073247dc5c71d67ef8dcf5e67a9c525a1a60405160405180910390a3505050505050565b338860008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104835783829060005260206000200180546103f6906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610422906117e9565b801561046f5780601f106104445761010080835404028352916020019161046f565b820191906000526020600020905b81548152906001019060200180831161045257829003601f168201915b5050505050815260200190600101906103d7565b5050505090506000805b82518110156104e25783805190602001208382815181106104b1576104b061181b565b5b60200260200101518051906020012014156104cf57600191506104e2565b80806104da90611879565b91505061048d565b50806105275783836040517faced354100000000000000000000000000000000000000000000000000000000815260040161051e92919061191b565b60405180910390fd5b600060018d6040516105399190611987565b90815260200160405180910390208c6040516105559190611987565b908152602001604051809103902090508b81600001908051906020019061057d929190610e4a565b508a816001019080519060200190610596929190610e4a565b50898160020190805190602001906105af929190610e4a565b50888160030181905550878160040190805190602001906105d1929190610e4a565b5060005b87518110156106c1578160050160018160018154018082558091505003906000526020600020905050600060405180604001604052808a848151811061061e5761061d61181b565b5b6020026020010151815260200189848151811061063e5761063d61181b565b5b60200260200101518152509050808360050183815481106106625761066161181b565b5b9060005260206000209060020201600082015181600001908051906020019061068c929190610e4a565b5060208201518160010190805190602001906106a9929190610e4a565b509050505080806106b990611879565b9150506105d5565b50876040516106d09190611987565b60405180910390208c6040516106e69190611987565b60405180910390208e6040516106fc9190611987565b60405180910390207f8d196dc01f2267f2a629b926538918c052cdf7358631a43299259213ffa76b8b8e8e8e8760050160405161073c9493929190611b4c565b60405180910390a450505050505050505050505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561085f5783829060005260206000200180546107d2906117e9565b80601f01602080910402602001604051908101604052809291908181526020018280546107fe906117e9565b801561084b5780601f106108205761010080835404028352916020019161084b565b820191906000526020600020905b81548152906001019060200180831161082e57829003601f168201915b5050505050815260200190600101906107b3565b505050509050919050565b610872610ed0565b338360008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109805783829060005260206000200180546108f3906117e9565b80601f016020809104026020016040519081016040528092919081815260200182805461091f906117e9565b801561096c5780601f106109415761010080835404028352916020019161096c565b820191906000526020600020905b81548152906001019060200180831161094f57829003601f168201915b5050505050815260200190600101906108d4565b5050505090506000805b82518110156109df5783805190602001208382815181106109ae576109ad61181b565b5b60200260200101518051906020012014156109cc57600191506109df565b80806109d790611879565b91505061098a565b5080610a245783836040517faced3541000000000000000000000000000000000000000000000000000000008152600401610a1b92919061191b565b60405180910390fd5b600187604051610a349190611987565b908152602001604051809103902086604051610a509190611987565b90815260200160405180910390206040518060c0016040529081600082018054610a79906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa5906117e9565b8015610af25780601f10610ac757610100808354040283529160200191610af2565b820191906000526020600020905b815481529060010190602001808311610ad557829003601f168201915b50505050508152602001600182018054610b0b906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b37906117e9565b8015610b845780601f10610b5957610100808354040283529160200191610b84565b820191906000526020600020905b815481529060010190602001808311610b6757829003601f168201915b50505050508152602001600282018054610b9d906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc9906117e9565b8015610c165780601f10610beb57610100808354040283529160200191610c16565b820191906000526020600020905b815481529060010190602001808311610bf957829003601f168201915b5050505050815260200160038201548152602001600482018054610c39906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c65906117e9565b8015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610e365783829060005260206000209060020201604051806040016040529081600082018054610d13906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3f906117e9565b8015610d8c5780601f10610d6157610100808354040283529160200191610d8c565b820191906000526020600020905b815481529060010190602001808311610d6f57829003601f168201915b50505050508152602001600182018054610da5906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd1906117e9565b8015610e1e5780601f10610df357610100808354040283529160200191610e1e565b820191906000526020600020905b815481529060010190602001808311610e0157829003601f168201915b50505050508152505081526020019060010190610ce0565b505050508152505094505050505092915050565b828054610e56906117e9565b90600052602060002090601f016020900481019282610e785760008555610ebf565b82601f10610e9157805160ff1916838001178555610ebf565b82800160010185558215610ebf579182015b82811115610ebe578251825591602001919060010190610ea3565b5b509050610ecc9190610f06565b5090565b6040518060c001604052806060815260200160608152602001606081526020016000815260200160608152602001606081525090565b5b80821115610f1f576000816000905550600101610f07565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6282610f37565b9050919050565b610f7281610f57565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fe882610f9f565b810181811067ffffffffffffffff8211171561100757611006610fb0565b5b80604052505050565b600061101a610f23565b90506110268282610fdf565b919050565b600067ffffffffffffffff82111561104657611045610fb0565b5b61104f82610f9f565b9050602081019050919050565b82818337600083830152505050565b600061107e6110798461102b565b611010565b90508281526020810184848401111561109a57611099610f9a565b5b6110a584828561105c565b509392505050565b600082601f8301126110c2576110c1610f95565b5b81356110d284826020860161106b565b91505092915050565b600080604083850312156110f2576110f1610f2d565b5b600061110085828601610f80565b925050602083013567ffffffffffffffff81111561112157611120610f32565b5b61112d858286016110ad565b9150509250929050565b6000819050919050565b61114a81611137565b811461115557600080fd5b50565b60008135905061116781611141565b92915050565b600067ffffffffffffffff82111561118857611187610fb0565b5b602082029050602081019050919050565b600080fd5b60006111b16111ac8461116d565b611010565b905080838252602082019050602084028301858111156111d4576111d3611199565b5b835b8181101561121b57803567ffffffffffffffff8111156111f9576111f8610f95565b5b80860161120689826110ad565b855260208501945050506020810190506111d6565b5050509392505050565b600082601f83011261123a57611239610f95565b5b813561124a84826020860161119e565b91505092915050565b600080600080600080600080610100898b03121561127457611273610f2d565b5b600089013567ffffffffffffffff81111561129257611291610f32565b5b61129e8b828c016110ad565b985050602089013567ffffffffffffffff8111156112bf576112be610f32565b5b6112cb8b828c016110ad565b975050604089013567ffffffffffffffff8111156112ec576112eb610f32565b5b6112f88b828c016110ad565b965050606089013567ffffffffffffffff81111561131957611318610f32565b5b6113258b828c016110ad565b95505060806113368b828c01611158565b94505060a089013567ffffffffffffffff81111561135757611356610f32565b5b6113638b828c016110ad565b93505060c089013567ffffffffffffffff81111561138457611383610f32565b5b6113908b828c01611225565b92505060e089013567ffffffffffffffff8111156113b1576113b0610f32565b5b6113bd8b828c01611225565b9150509295985092959890939650565b6000602082840312156113e3576113e2610f2d565b5b60006113f184828501610f80565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611460578082015181840152602081019050611445565b8381111561146f576000848401525b50505050565b600061148082611426565b61148a8185611431565b935061149a818560208601611442565b6114a381610f9f565b840191505092915050565b60006114ba8383611475565b905092915050565b6000602082019050919050565b60006114da826113fa565b6114e48185611405565b9350836020820285016114f685611416565b8060005b85811015611532578484038952815161151385826114ae565b945061151e836114c2565b925060208a019950506001810190506114fa565b50829750879550505050505092915050565b6000602082019050818103600083015261155e81846114cf565b905092915050565b6000806040838503121561157d5761157c610f2d565b5b600083013567ffffffffffffffff81111561159b5761159a610f32565b5b6115a7858286016110ad565b925050602083013567ffffffffffffffff8111156115c8576115c7610f32565b5b6115d4858286016110ad565b9150509250929050565b6115e781611137565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060408301600083015184820360008601526116368282611475565b915050602083015184820360208601526116508282611475565b9150508091505092915050565b60006116698383611619565b905092915050565b6000602082019050919050565b6000611689826115ed565b61169381856115f8565b9350836020820285016116a585611609565b8060005b858110156116e157848403895281516116c2858261165d565b94506116cd83611671565b925060208a019950506001810190506116a9565b50829750879550505050505092915050565b600060c08301600083015184820360008601526117108282611475565b9150506020830151848203602086015261172a8282611475565b915050604083015184820360408601526117448282611475565b915050606083015161175960608601826115de565b50608083015184820360808601526117718282611475565b91505060a083015184820360a086015261178b828261167e565b9150508091505092915050565b600060208201905081810360008301526117b281846116f3565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061180157607f821691505b60208210811415611815576118146117ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061188482611137565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118b7576118b661184a565b5b600182019050919050565b6118cb81610f57565b82525050565b600082825260208201905092915050565b60006118ed82611426565b6118f781856118d1565b9350611907818560208601611442565b61191081610f9f565b840191505092915050565b600060408201905061193060008301856118c2565b818103602083015261194281846118e2565b90509392505050565b600081905092915050565b600061196182611426565b61196b818561194b565b935061197b818560208601611442565b80840191505092915050565b60006119938284611956565b915081905092915050565b6119a781611137565b82525050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b60008154611a00816117e9565b611a0a8186611431565b94506001821660008114611a255760018114611a3757611a6a565b60ff1983168652602086019350611a6a565b611a40856119de565b60005b83811015611a6257815481890152600182019150602081019050611a43565b808801955050505b50505092915050565b60006040830160008084018583036000870152611a9083826119f3565b925050600184018583036020870152611aa983826119f3565b925050819250505092915050565b6000611ac38383611a73565b905092915050565b6000600282019050919050565b6000611ae3826119ad565b611aed81856119b8565b935083602082028501611aff856119c9565b8060005b85811015611b3a57848403895281611b1b8582611ab7565b9450611b2683611acb565b925060208a01995050600181019050611b03565b50829750879550505050505092915050565b60006080820190508181036000830152611b6681876118e2565b90508181036020830152611b7a81866118e2565b9050611b89604083018561199e565b8181036060830152611b9b8184611ad8565b90509594505050505056fea26469706673582212200383f5fe906eefdbdb05fbbb36476940d90d9783bcff0adca7572cd50da2159264736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Wahaj Javed",
    "details": "This implements simple mappings and events to accomplish the task",
    "kind": "dev",
    "methods": {
      "addAddressToCompany(address,string)": {
        "params": {
          "companyID": ": the ID of the company",
          "walletAddress": ": The address of the wallet of the user"
        }
      },
      "getCompanyIDFromWallet(address)": {
        "params": {
          "walletAddress": ": The address of the wallet of the user"
        },
        "returns": {
          "_0": "The list of company IDs"
        }
      },
      "getMeetingData(string,string)": {
        "params": {
          "companyID": ": the ID of the company",
          "meetingID": ": the ID of the meeting to be accessed"
        },
        "returns": {
          "_0": "The requested meeting data"
        }
      },
      "storeContent(string,string,string,string,uint256,string,string[],string[])": {
        "params": {
          "chairpersonName": ": The Name of the chairperson in the meeting",
          "companyID": ": The ID of the company",
          "contentHash": ": The Hash value of the content PDF",
          "meetingID": ": The ID of the meeting recieved from the database",
          "memberNames": ": The List of the names of all members",
          "numberOfMembers": ": The number of members who attended the meeting",
          "roles": ": The List of the roles of all members",
          "timestamp": ": The time at which meeting was held"
        }
      }
    },
    "title": "Safe Meetings",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAddressToCompany(address,string)": {
        "notice": "Method for registering a wallet address to allow access to company data"
      },
      "getCompanyIDFromWallet(address)": {
        "notice": "Method for returning the list of company IDs accessible to the user"
      },
      "getMeetingData(string,string)": {
        "notice": ": Method for returning the requested meeting data"
      },
      "storeContent(string,string,string,string,uint256,string,string[],string[])": {
        "notice": ": Method for storing the meeting data into the specific company ID List"
      }
    },
    "notice": "This contract is for creating an untemperable storage for board meeting contents.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 71,
        "contract": "contracts/SafeMeeting.sol:SafeMeeting",
        "label": "s_addressToCompanyID",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 78,
        "contract": "contracts/SafeMeeting.sol:SafeMeeting",
        "label": "s_idToMeetingData",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_struct(MeetingData)66_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(MemberRole)51_storage)dyn_storage": {
        "base": "t_struct(MemberRole)51_storage",
        "encoding": "dynamic_array",
        "label": "struct SafeMeeting.MemberRole[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_struct(MeetingData)66_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(string => struct SafeMeeting.MeetingData))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_struct(MeetingData)66_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_struct(MeetingData)66_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct SafeMeeting.MeetingData)",
        "numberOfBytes": "32",
        "value": "t_struct(MeetingData)66_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(MeetingData)66_storage": {
        "encoding": "inplace",
        "label": "struct SafeMeeting.MeetingData",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "meetingID",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 55,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "chairpersonName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 57,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 59,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "numberOfMembers",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 61,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "contentHash",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 65,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "memberToRoles",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MemberRole)51_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(MemberRole)51_storage": {
        "encoding": "inplace",
        "label": "struct SafeMeeting.MemberRole",
        "members": [
          {
            "astId": 48,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "memberName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 50,
            "contract": "contracts/SafeMeeting.sol:SafeMeeting",
            "label": "memberRole",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}